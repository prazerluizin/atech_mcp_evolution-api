name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x, 22.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint
      continue-on-error: true

    - name: Run tests
      run: npm run test:ci

    - name: Build project
      run: npm run build

    - name: Test NPX installation (Unix)
      if: runner.os != 'Windows'
      run: |
        # Test that the built package can be executed
        node bin/evolution-api-mcp.js --help || echo "Help command test completed"
        
    - name: Test NPX installation (Windows)
      if: runner.os == 'Windows'
      run: |
        # Test that the built package can be executed on Windows
        node bin/evolution-api-mcp.js --help
      continue-on-error: true

    - name: Upload coverage reports
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false

  build-and-test-package:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Pack package
      run: npm pack

    - name: Test packed package installation
      run: |
        # Install the packed package globally to test npx functionality
        PACKAGE_FILE=$(ls evolution-api-mcp-*.tgz)
        npm install -g $PACKAGE_FILE
        
        # Test that the command is available
        which evolution-api-mcp || echo "Command not found in PATH, checking npx..."
        
        # Test npx execution with help flag
        npx evolution-api-mcp --help || echo "NPX test completed"

    - name: Upload package artifact
      uses: actions/upload-artifact@v4
      with:
        name: npm-package
        path: evolution-api-mcp-*.tgz
        retention-days: 7